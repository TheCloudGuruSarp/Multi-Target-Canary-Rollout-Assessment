# .github/workflows/build-and-push.yml

name: Build, Sign, and Push Image

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  ECR_REPOSITORY: podinfo
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    name: Build, Push, Sign, and Create SBOM
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          role-session-name: GitHubActionsBuildSession

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Sign the container image
        run: |
          cosign sign --yes ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}@${{ steps.build-image.outputs.digest }}
      
      # --- YENİ EKLENEN ADIMLAR ---
      - name: Install Syft to generate SBOM
        uses: anchore/syft-action@v0.15.0
        with:
          image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          format: spdx-json
          output: sbom.json

      - name: Upload SBOM as a build artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json
      # --- YENİ ADIMLARIN SONU ---

      - name: Echo Image URI
        run: echo "Pushed image URI: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}@${{ steps.build-image.outputs.digest }}"
