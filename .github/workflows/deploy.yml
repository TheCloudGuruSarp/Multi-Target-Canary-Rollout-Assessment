
name: Deploy to AWS

on:
  workflow_run:
    workflows: ["Build, Sign, and Push Image"]
    types:
      - completed

jobs:
  deploy-to-dev:
    name: Deploy to Development Environment
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    env:
      AWS_REGION: us-east-1
      ECR_REPOSITORY: podinfo
      IMAGE_TAG: ${{ github.event.workflow_run.head_sha }}

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # We need to check out the specific commit that triggered the build
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          role-session-name: GitHubActionsDeploySession

      - name: Helper to get Lambda versions
        id: get-lambda-version
        run: |
          # This is a placeholder for a more robust version management script
          echo "VERSION=1" >> $GITHUB_OUTPUT
          echo "VERSION_PLUS_ONE=2" >> $GITHUB_OUTPUT

      - name: Deploy to Lambda via CodeDeploy
        run: |
          # This part remains complex and will be tested once the account is active
          # We will likely need to adjust the AppSpec content based on real Lambda versions
          echo "Skipping Lambda deployment for now..."

      # --- GÜNCELLENMİŞ EC2 DAĞITIM ADIMI ---
      - name: Deploy to EC2 via CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name podinfo-ec2 \
            --deployment-group-name podinfo-ec2-blue-green-dg \
            --description "Deploying commit ${{ env.IMAGE_TAG }} to EC2" \
            --revision '{"revisionType": "GitHub", "gitHubLocation": {"repository": "${{ github.repository }}", "commitId": "${{ env.IMAGE_TAG }}"}}'
      # --- GÜNCELLENMİŞ ADIMIN SONU ---

  approve-for-prod:
    name: Approve for Production
    runs-on: ubuntu-latest
    needs: deploy-to-dev
    environment:
      name: production
    steps:
      - name: Manual approval step
        run: echo "Deployment to production approved. Proceeding..."

  deploy-to-prod:
    name: Deploy to Production Environment
    runs-on: ubuntu-latest
    needs: approve-for-prod
    steps:
      - name: Placeholder for production deployment
        run: echo "Deploying to production..."
